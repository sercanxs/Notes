int[][] a = {{1,2,3},{2,9,3,5},{3,5,2,6}};


int[][] b = {{1,2,3},{2,9},{3,5,2,6,7,9,3,5,6}}; =her row farklı sayıda column içerebilir.


	int[][] array = new int[3][];
		array[0] = new int[2];
		array[1] = new int[6];
		array[2] = new int [4];
		
		System.out.println(array[1][0]);


        System.out.println(Arrays.equals(array[0],array[1])); = 2 array eşitse true.

        	int[] c = {1,2,3,2,9,3,5,3,5,2,6};
		
		Arrays.sort(c);                          = Sıraya dizer sayıları. Stringlerde alfabeye göre dizer. sayılar harflerden önce
		System.out.println(Arrays.toString(c));          gelir. büyük harfler de küçük harflerden önce gelir.

      	

int[] x = {1,4,6,2,7,9};
		
		System.out.println(Arrays.binarySearch(x, 6));  = 2 sırasını veriyor.

                System.out.println(Arrays.binarySearch(x, 5));  = -3 = 5, 4 ile 6 arasında, 6'nın sırası 2 = -2 + -1 =-3. ilk bulduğu
                                                                         aralığı yapıyor.







                int[] y = x;
				
		int[] z = Arrays.copyOf(y, y.length); =length kısmına örneğin 20 yazarsak geriye kalan kısımlar 0 olur. yeni object açılır.
		
		
		x[0]=4;
		
		System.out.println(Arrays.toString(y));    =y değişir.
		System.out.println(Arrays.toString(z));    =z değişmez.
		
				